// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AdminSettings.vue Authorization Method edit mode form, incomplete admin configuration should show proper elements when supported user_oidc app is enabled 1`] = `
<div
  class="authorization-method"
>
  <formheading-stub
    index="2"
    title="Authentication method"
  />
   
  <!---->
</div>
`;

exports[`AdminSettings.vue Authorization Method edit mode form, incomplete admin configuration should show proper elements when user_oidc app is not installed 1`] = `
<div
  class="authorization-method"
>
  <formheading-stub
    index="2"
    title="Authentication method"
  />
   
  <!---->
</div>
`;

exports[`AdminSettings.vue Authorization Method view mode form complete should show field values and hide the form completed with oauth2 auth method 1`] = `
Wrapper {
  "selector": ".authorization-method",
}
`;

exports[`AdminSettings.vue Authorization Method view mode form complete should show field values and hide the form completed with oidc auth method 1`] = `
Wrapper {
  "selector": ".authorization-method",
}
`;

exports[`AdminSettings.vue Nextcloud OAuth values form edit mode should show the form and hide the field values 1`] = `
Wrapper {
  "selector": ".nextcloud-oauth-values",
}
`;

exports[`AdminSettings.vue Nextcloud OAuth values form view mode with complete values should show the field values and hide the form 1`] = `
Wrapper {
  "selector": ".nextcloud-oauth-values",
}
`;

exports[`AdminSettings.vue OIDC authorization settings form complete: view mode supported user_oidc app disabled should show field values and hide authorization settings form 1`] = `
<div
  class="authorization-settings"
>
  <formheading-stub
    haserror="true"
    index="3"
    iscomplete="true"
    title="Authentication settings"
  />
   
  <errornote-stub
    errorlink="http://localhost/settings/apps/files/user_oidc"
    errorlinklabel="Download and enable it"
    errormessage="This app is required to use the OIDC authentication method"
    errortitle="The "{app}" app is not installed"
  />
   
  <!---->
   
  <div
    class="authorization-settings--content"
  >
    <fieldvalue-stub
      class="pb-1"
      isrequired="true"
      title="OIDC Provider Type"
      value="nextcloud_hub"
    />
     
    <!---->
     
    <!---->
     
    <div>
      <fieldvalue-stub
        class="pb-1"
        isrequired="true"
        title="OpenProject client ID"
        value="some-target-aud-client-id"
      />
    </div>
  </div>
   
  <div
    class="form-actions"
  >
    <ncbutton-stub
      alignment="center"
      data-test-id="reset-auth-settings-btn"
      disabled="true"
      nativetype="button"
      type="secondary"
    >
      
				Edit authentication settings
			
    </ncbutton-stub>
     
    <!---->
     
    <!---->
  </div>
</div>
`;

exports[`AdminSettings.vue OIDC authorization settings form complete: view mode supported user_oidc app enabled should show configured OIDC authorization 1`] = `
<div
  class="authorization-settings"
>
  <formheading-stub
    index="3"
    iscomplete="true"
    title="Authentication settings"
  />
   
  <!---->
   
  <!---->
   
  <div
    class="authorization-settings--content"
  >
    <fieldvalue-stub
      class="pb-1"
      isrequired="true"
      title="OIDC Provider Type"
      value="nextcloud_hub"
    />
     
    <!---->
     
    <!---->
     
    <div>
      <fieldvalue-stub
        class="pb-1"
        isrequired="true"
        title="OpenProject client ID"
        value="some-target-aud-client-id"
      />
    </div>
  </div>
   
  <div
    class="form-actions"
  >
    <ncbutton-stub
      alignment="center"
      data-test-id="reset-auth-settings-btn"
      nativetype="button"
      type="secondary"
    >
      
				Edit authentication settings
			
    </ncbutton-stub>
     
    <!---->
     
    <!---->
  </div>
</div>
`;

exports[`AdminSettings.vue OIDC authorization settings form complete: view mode supported user_oidc app enabled should show configured OIDC authorization 2`] = `
<div
  class="authorization-settings"
>
  <formheading-stub
    index="3"
    iscomplete="true"
    title="Authentication settings"
  />
   
  <!---->
   
  <!---->
   
  <div
    class="authorization-settings--content"
  >
    <fieldvalue-stub
      class="pb-1"
      isrequired="true"
      title="OIDC Provider Type"
      value="external"
    />
     
    <fieldvalue-stub
      class="pb-1"
      isrequired="true"
      title="OIDC Provider"
      value="some-oidc-provider"
    />
     
    <fieldvalue-stub
      class="pb-1"
      title="Enable token exchange"
    />
     
    <!---->
  </div>
   
  <div
    class="form-actions"
  >
    <ncbutton-stub
      alignment="center"
      data-test-id="reset-auth-settings-btn"
      nativetype="button"
      type="secondary"
    >
      
				Edit authentication settings
			
    </ncbutton-stub>
     
    <!---->
     
    <!---->
  </div>
</div>
`;

exports[`AdminSettings.vue OIDC authorization settings form complete: view mode supported user_oidc app enabled should show configured OIDC authorization 3`] = `
<div
  class="authorization-settings"
>
  <formheading-stub
    index="3"
    iscomplete="true"
    title="Authentication settings"
  />
   
  <!---->
   
  <!---->
   
  <div
    class="authorization-settings--content"
  >
    <fieldvalue-stub
      class="pb-1"
      isrequired="true"
      title="OIDC Provider Type"
      value="external"
    />
     
    <fieldvalue-stub
      class="pb-1"
      isrequired="true"
      title="OIDC Provider"
      value="some-oidc-provider"
    />
     
    <fieldvalue-stub
      class="pb-1"
      title="Enable token exchange"
      value="true"
    />
     
    <div>
      <fieldvalue-stub
        class="pb-1"
        isrequired="true"
        title="OpenProject client ID"
        value="some-target-aud-client-id"
      />
    </div>
  </div>
   
  <div
    class="form-actions"
  >
    <ncbutton-stub
      alignment="center"
      data-test-id="reset-auth-settings-btn"
      nativetype="button"
      type="secondary"
    >
      
				Edit authentication settings
			
    </ncbutton-stub>
     
    <!---->
     
    <!---->
  </div>
</div>
`;

exports[`AdminSettings.vue OIDC authorization settings form complete: view mode unsupported user_oidc app enabled should show field values and hide authorization settings form 1`] = `
<div
  class="authorization-settings"
>
  <formheading-stub
    haserror="true"
    index="3"
    iscomplete="true"
    title="Authentication settings"
  />
   
  <!---->
   
  <errornote-stub
    errorlink="http://localhost/settings/apps/files/user_oidc"
    errorlinklabel="Download and enable it"
    errormessage="Requires app version "{minimumAppVersion}" or later"
    errortitle="The "{app}" app is not supported"
  />
   
  <div
    class="authorization-settings--content"
  >
    <fieldvalue-stub
      class="pb-1"
      isrequired="true"
      title="OIDC Provider Type"
      value="nextcloud_hub"
    />
     
    <!---->
     
    <!---->
     
    <div>
      <fieldvalue-stub
        class="pb-1"
        isrequired="true"
        title="OpenProject client ID"
        value="some-target-aud-client-id"
      />
    </div>
  </div>
   
  <div
    class="form-actions"
  >
    <ncbutton-stub
      alignment="center"
      data-test-id="reset-auth-settings-btn"
      disabled="true"
      nativetype="button"
      type="secondary"
    >
      
				Edit authentication settings
			
    </ncbutton-stub>
     
    <!---->
     
    <!---->
  </div>
</div>
`;

exports[`AdminSettings.vue OIDC authorization settings form complete: view mode with external SSO provider with token exchnage should show configured OIDC authorization 1`] = `
<div
  class="authorization-settings"
>
  <formheading-stub
    index="3"
    iscomplete="true"
    title="Authentication settings"
  />
   
  <!---->
   
  <!---->
   
  <div
    class="authorization-settings--content"
  >
    <fieldvalue-stub
      class="pb-1"
      isrequired="true"
      title="OIDC Provider Type"
      value="external"
    />
     
    <fieldvalue-stub
      class="pb-1"
      isrequired="true"
      title="OIDC Provider"
      value="some-oidc-provider"
    />
     
    <fieldvalue-stub
      class="pb-1"
      title="Enable token exchange"
      value="true"
    />
     
    <div>
      <fieldvalue-stub
        class="pb-1"
        isrequired="true"
        title="OpenProject client ID"
        value="some-target-aud-client-id"
      />
    </div>
  </div>
   
  <div
    class="form-actions"
  >
    <ncbutton-stub
      alignment="center"
      data-test-id="reset-auth-settings-btn"
      nativetype="button"
      type="secondary"
    >
      
				Edit authentication settings
			
    </ncbutton-stub>
     
    <!---->
     
    <!---->
  </div>
</div>
`;

exports[`AdminSettings.vue OIDC authorization settings form complete: view mode with external SSO provider without token exchnage should show configured OIDC authorization 1`] = `
<div
  class="authorization-settings"
>
  <formheading-stub
    index="3"
    iscomplete="true"
    title="Authentication settings"
  />
   
  <!---->
   
  <!---->
   
  <div
    class="authorization-settings--content"
  >
    <fieldvalue-stub
      class="pb-1"
      isrequired="true"
      title="OIDC Provider Type"
      value="external"
    />
     
    <fieldvalue-stub
      class="pb-1"
      isrequired="true"
      title="OIDC Provider"
      value="some-oidc-provider"
    />
     
    <fieldvalue-stub
      class="pb-1"
      title="Enable token exchange"
    />
     
    <!---->
  </div>
   
  <div
    class="form-actions"
  >
    <ncbutton-stub
      alignment="center"
      data-test-id="reset-auth-settings-btn"
      nativetype="button"
      type="secondary"
    >
      
				Edit authentication settings
			
    </ncbutton-stub>
     
    <!---->
     
    <!---->
  </div>
</div>
`;

exports[`AdminSettings.vue OpenProject OAuth values form edit mode should show the form and hide the field values 1`] = `
Wrapper {
  "selector": ".openproject-oauth-values",
}
`;

exports[`AdminSettings.vue OpenProject OAuth values form view mode and completed state should show field values and hide the form if server host form is complete 1`] = `
Wrapper {
  "selector": ".openproject-oauth-values",
}
`;

exports[`AdminSettings.vue Project folders form (Project Folder Setup) view mode without project folder setup should show status as "Inactive" 1`] = `
Wrapper {
  "selector": ".project-folder-setup",
}
`;

exports[`AdminSettings.vue default user configurations form should be visible when the integration is complete 1`] = `
ErrorWrapper {
  "selector": ".default-prefs",
}
`;
